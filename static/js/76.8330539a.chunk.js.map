{"version":3,"file":"static/js/76.8330539a.chunk.js","mappings":"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","sources":["components/Api.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst APIKEY = 'e41d1e074713eb19259eb796492b59d1';\n\n// повернення популярних фільмів\nexport const fetchTrendingMovies = async () => {\n  const target = `https://api.themoviedb.org/3/trending/movie/day?api_key=${APIKEY}`;\n  const response = await axios.get(target);\n  // цей вираз повертає частину даних, а саме результати пошуку.\n  // корисний, коли я шукаю фільм за запитом\n  // в даному випадку цей вираз повертає популярні фільми\n  return response.data.results;\n};\n\n// повернення фільмів за пошуком\nexport const fetchSearchQuery = async query => {\n  const target = `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${query}&include_adult=false&language=en-US&page=1`;\n  const response = await axios.get(target);\n  // цей вираз повертає частину даних, а саме результати пошуку.\n  // корисний, коли я шукаю фільм за запитом\n  return response.data.results;\n};\n\n//   повернення деталей про вибраний фільм\nexport const fetchDetailsMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}&language=en-US`;\n  const response = await axios.get(target);\n  // вираз повертає ВСІ дані, які я отримала з API.\n  // корисно, коли треба отримати загальне інфо про фільм\n  // (заголовок, опис, рік випуску, рейтинг ітд)\n  return response.data;\n};\n\n// повернення груп акторів, які грали у вибраному фільмі\nexport const fetchCastMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}&language=en-US`;\n\n  const response = await axios.get(target);\n  // цей вираз повертає ЛИШЕ частину даних,\n  // в даному випадку тільки групу акторів, які грали у\n  // вибраному фільмі\n  return response.data.cast;\n};\n\n//   повернення рецензії вибраного фільму\nexport const fetchReviewsMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`;\n  const response = await axios.get(target);\n  // вираз повертає ВСІ дані, які я отримала з API.\n  // корисно, коли треба отримати загальне інфо про фільм\n  // (заголовок, опис, рік випуску, рейтинг ітд)\n  return response.data.results;\n};\nconst Api = {\n  fetchTrendingMovies,\n  fetchSearchQuery,\n  fetchDetailsMovie,\n  fetchCastMovie,\n  fetchReviewsMovie,\n};\n\nexport default Api;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__a0CDL\"};","import { fetchCastMovie } from 'components/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n\n  const showFetchedCastMovies = async id => {\n    const fetchedCastMovie = await fetchCastMovie(id);\n    setCast(fetchedCastMovie);\n  };\n  // В компоненті, який відповідає за відображення цього маршруту, ви використовуєте хук useParams().\n  // Хук повертає об’єкт, де ключі - це назви параметрів, визначених у маршруті, а значення - це їхні фактичні значення з URL.\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    showFetchedCastMovies(movieId);\n  }, [movieId]);\n\n  if (cast) {\n    return (\n      <div>\n        <ul>\n          {cast.map(e => {\n            return (\n              <li key={e.id} className={css.item}>\n                <img\n                  src={\n                    e.profile_path\n                      ? `https://www.themoviedb.org/t/p/w138_and_h175_face/${e.profile_path}`\n                      : `https://via.placeholder.com/138x175?text=Theres+no+photo`\n                  }\n                  alt={e.name}\n                />\n                <div>\n                  <h3>Additional information</h3>\n                  <p>Name: {e.name}</p>\n                  <p>Character: {e.character}</p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["APIKEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","target","response","_context","prev","next","concat","axios","sent","abrupt","data","results","stop","apply","arguments","fetchSearchQuery","_ref2","_callee2","query","_context2","_x","fetchDetailsMovie","_ref3","_callee3","id","_context3","_x2","fetchCastMovie","_ref4","_callee4","_context4","cast","_x3","fetchReviewsMovie","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","setCast","showFetchedCastMovies","fetchedCastMovie","movieId","useParams","useEffect","_jsx","children","map","e","_jsxs","className","css","src","profile_path","alt","name","character"],"sourceRoot":""}