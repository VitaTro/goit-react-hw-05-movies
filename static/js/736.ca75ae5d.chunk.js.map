{"version":3,"file":"static/js/736.ca75ae5d.chunk.js","mappings":"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","sources":["components/Api.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst APIKEY = 'e41d1e074713eb19259eb796492b59d1';\n\n// повернення популярних фільмів\nexport const fetchTrendingMovies = async () => {\n  const target = `https://api.themoviedb.org/3/trending/movie/day?api_key=${APIKEY}`;\n  const response = await axios.get(target);\n  // цей вираз повертає частину даних, а саме результати пошуку.\n  // корисний, коли я шукаю фільм за запитом\n  // в даному випадку цей вираз повертає популярні фільми\n  return response.data.results;\n};\n\n// повернення фільмів за пошуком\nexport const fetchSearchQuery = async query => {\n  const target = `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${query}&include_adult=false&language=en-US&page=1`;\n  const response = await axios.get(target);\n  // цей вираз повертає частину даних, а саме результати пошуку.\n  // корисний, коли я шукаю фільм за запитом\n  return response.data.results;\n};\n\n//   повернення деталей про вибраний фільм\nexport const fetchDetailsMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}&language=en-US`;\n  const response = await axios.get(target);\n  // вираз повертає ВСІ дані, які я отримала з API.\n  // корисно, коли треба отримати загальне інфо про фільм\n  // (заголовок, опис, рік випуску, рейтинг ітд)\n  return response.data;\n};\n\n// повернення груп акторів, які грали у вибраному фільмі\nexport const fetchCastMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}&language=en-US`;\n\n  const response = await axios.get(target);\n  // цей вираз повертає ЛИШЕ частину даних,\n  // в даному випадку тільки групу акторів, які грали у\n  // вибраному фільмі\n  return response.data.cast;\n};\n\n//   повернення рецензії вибраного фільму\nexport const fetchReviewsMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`;\n  const response = await axios.get(target);\n  // вираз повертає ВСІ дані, які я отримала з API.\n  // корисно, коли треба отримати загальне інфо про фільм\n  // (заголовок, опис, рік випуску, рейтинг ітд)\n  return response.data.results;\n};\nconst Api = {\n  fetchTrendingMovies,\n  fetchSearchQuery,\n  fetchDetailsMovie,\n  fetchCastMovie,\n  fetchReviewsMovie,\n};\n\nexport default Api;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 10px;\n  color: #e0e0e070;\n  display: flex;\n\n  @media (max-width: 500px) {\n    margin: 0;\n    margin-top: 10px;\n  }\n`;\n\nexport const Caption = styled.caption`\n  font-size: 40px;\n  font-weight: 600;\n  margin: 0 auto;\n  text-align: center;\n  padding-bottom: 40px;\n  padding-top: 20px;\n  color: lightgrey;\n  text-shadow: 0 0 5px rgb(67, 182, 208);\n`;\n\nexport const Tbody = styled.tbody`\n  margin: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  @media (max-width: 550px) {\n    margin: 0;\n  }\n`;\n\nexport const Table = styled.table`\n  box-shadow: 0px 0px 7px 1px rgba(205, 205, 205, 1);\n  border-radius: 6px;\n  width: 280px;\n  padding: 5px;\n  background-color: #e0e0e070;\n\n  @media (max-width: 550px) {\n    width: 200px;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 6px;\n  max-width: 120px;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  color: black;\n  padding-left: 5px;\n`;\n\nexport const Name = styled.td`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  font-size: 15px;\n  padding-bottom: 10px;\n`;\n","import { fetchCastMovie } from 'components/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Caption,\n  Container,\n  Details,\n  Image,\n  Table,\n  Tbody,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const showFetchedCastMovies = async id => {\n    const fetchedCastMovie = await fetchCastMovie(id);\n    setCast(fetchedCastMovie);\n  };\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    showFetchedCastMovies(movieId);\n  }, [movieId]);\n\n  if (cast) {\n    return (\n      <Container>\n        <table>\n          <Caption>Cast</Caption>\n          <Tbody>\n            {cast.map(e => (\n              <Table key={e.id}>\n                <tr>\n                  <td>\n                    <Image\n                      src={\n                        e.profile_path\n                          ? `https://www.themoviedb.org/t/p/w138_and_h175_face/${e.profile_path}`\n                          : `https://via.placeholder.com/138x175?text=Theres+no+photo`\n                      }\n                      alt={e.name}\n                    />\n                  </td>\n                  <td>\n                    <Details>\n                      <div>\n                        <strong>Name:</strong> {e.name}\n                      </div>\n                      <div>\n                        <strong>Character:</strong> {e.character}\n                      </div>\n                    </Details>\n                  </td>\n                </tr>\n              </Table>\n            ))}\n          </Tbody>\n        </table>\n      </Container>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["APIKEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","target","response","_context","prev","next","concat","axios","sent","abrupt","data","results","stop","apply","arguments","fetchSearchQuery","_ref2","_callee2","query","_context2","_x","fetchDetailsMovie","_ref3","_callee3","id","_context3","_x2","fetchCastMovie","_ref4","_callee4","_context4","cast","_x3","fetchReviewsMovie","_ref5","_callee5","_context5","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","Caption","_templateObject2","Tbody","_templateObject3","Table","_templateObject4","Image","_templateObject5","Details","_templateObject6","_templateObject7","_useState","useState","_useState2","_slicedToArray","setCast","showFetchedCastMovies","fetchedCastMovie","movieId","useParams","useEffect","_jsx","children","_jsxs","map","e","src","profile_path","alt","name","character"],"sourceRoot":""}