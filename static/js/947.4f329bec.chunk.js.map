{"version":3,"file":"static/js/947.4f329bec.chunk.js","mappings":"+SAEMA,EAAS,mCAGFC,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC+C,OAA1EJ,EAAM,2DAAAK,OAA8DX,GAAMQ,EAAAE,KAAA,EACzDE,EAAAA,EAAAA,IAAUN,GAAQ,KAAD,EAA1B,OAARC,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAIPP,EAASQ,KAAKC,SAAO,wBAAAR,EAAAS,OAAA,GAAAZ,EAAA,KAC7B,kBAP+B,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAUnBC,EAAgB,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAMC,GAAK,IAAAjB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OACgD,OAAnFJ,EAAM,qDAAAK,OAAwDX,EAAM,WAAAW,OAAUY,EAAK,8CAAAC,EAAAd,KAAA,EAClEE,EAAAA,EAAAA,IAAUN,GAAQ,KAAD,EAA1B,OAARC,EAAQiB,EAAAX,KAAAW,EAAAV,OAAA,SAGPP,EAASQ,KAAKC,SAAO,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KAC7B,gBAN4BG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAShBO,EAAiB,eAAAC,GAAAxB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwB,EAAMC,GAAE,IAAAvB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA0B,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACkC,OAAnEJ,EAAM,sCAAAK,OAAyCkB,EAAE,aAAAlB,OAAYX,EAAM,mBAAA8B,EAAApB,KAAA,EAClDE,EAAAA,EAAAA,IAAUN,GAAQ,KAAD,EAA1B,OAARC,EAAQuB,EAAAjB,KAAAiB,EAAAhB,OAAA,SAIPP,EAASQ,MAAI,wBAAAe,EAAAb,OAAA,GAAAW,EAAA,KACrB,gBAP6BG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAUjBa,EAAc,eAAAC,GAAA9B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8B,EAAML,GAAE,IAAAvB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAC6C,OAA3EJ,EAAM,sCAAAK,OAAyCkB,EAAE,qBAAAlB,OAAoBX,EAAM,mBAAAmC,EAAAzB,KAAA,EAE1DE,EAAAA,EAAAA,IAAUN,GAAQ,KAAD,EAA1B,OAARC,EAAQ4B,EAAAtB,KAAAsB,EAAArB,OAAA,SAIPP,EAASQ,KAAKqB,MAAI,wBAAAD,EAAAlB,OAAA,GAAAiB,EAAA,KAC1B,gBAR0BG,GAAA,OAAAJ,EAAAf,MAAA,KAAAC,UAAA,KAWdmB,EAAiB,eAAAC,GAAApC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoC,EAAMC,GAAS,IAAAnC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAsC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OACmC,OAA3EJ,EAAM,uCAAAK,OAA0C8B,EAAS,aAAA9B,OAAYX,GAAM0C,EAAAhC,KAAA,EAC1DE,EAAAA,EAAAA,IAAUN,GAAQ,KAAD,EAA1B,OAARC,EAAQmC,EAAA7B,KAAA6B,EAAA5B,OAAA,SAIPP,EAASQ,MAAI,wBAAA2B,EAAAzB,OAAA,GAAAuB,EAAA,KACrB,gBAP6BG,GAAA,OAAAJ,EAAArB,MAAA,KAAAC,UAAA,I,iHCmC9B,UA5EqB,WAAO,IAADyB,EAAAC,EACzBC,GAA0BC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAA+B,QAAvBR,EAAiB,QAAjBC,GADCQ,EAAAA,EAAAA,MACWC,aAAK,IAAAT,OAAA,EAAdA,EAAgBU,YAAI,IAAAX,EAAAA,EAAI,IAEnCY,EAAuB,eAAAtD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMwB,GAAE,IAAA4B,EAAA,OAAArD,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEFgB,EAAAA,EAAAA,IAAkBG,GAAI,KAAD,EAAjD4B,EAAmBjD,EAAAK,KACzBsC,EAASM,GAAqBjD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAkD,GAAAlD,EAAA,SAE9BmD,QAAQC,IAAGpD,EAAAkD,IAAQ,yBAAAlD,EAAAS,OAAA,GAAAZ,EAAA,kBAEtB,gBAP4BoB,GAAA,OAAAvB,EAAAgB,MAAA,KAAAC,UAAA,KASrB0C,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,WACRP,EAAwBK,EAC1B,GAAG,CAACA,IAEAX,EACF,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIjB,EAASc,UACjBC,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAC,sBAExBC,EAAAA,EAAAA,KAAA,OACEI,IACErB,EAAMsB,YAAW,oDAAA7D,OACuCuC,EAAMsB,aAAW,2DAG3EC,IAAG,GAAA9D,OAAKuC,EAAMwB,aAGlBV,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKhB,EAAMwB,SACXV,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,eAAaS,KAAKC,MAA2B,GAArB1B,EAAM2B,cAAmB,QACvDV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIhB,EAAM4B,SAAW5B,EAAM4B,SAAW,yBACtCX,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAAD,SACGhB,EAAM6B,QACL7B,EAAM6B,OAAOC,KAAI,SAAAC,GACf,MAAM,GAANtE,OAAUsE,EAAEC,KAAI,IAClB,aAIRlB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,2BAEHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAOf,MAAO,CAAEC,KAAK,GAAD5C,OAAKyC,IAAac,SAAC,YAIlDC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAAUf,MAAO,CAAEC,KAAK,GAAD5C,OAAKyC,IAAac,SAAC,qBAQzDC,EAAAA,EAAAA,KAACgB,EAAAA,SAAQ,CAACC,UAAUjB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAAiBA,UACxCC,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,QAKjB,C","sources":["components/Api.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst APIKEY = 'e41d1e074713eb19259eb796492b59d1';\n\n// повернення популярних фільмів\nexport const fetchTrendingMovies = async () => {\n  const target = `https://api.themoviedb.org/3/trending/movie/day?api_key=${APIKEY}`;\n  const response = await axios.get(target);\n  // цей вираз повертає частину даних, а саме результати пошуку.\n  // корисний, коли я шукаю фільм за запитом\n  // в даному випадку цей вираз повертає популярні фільми\n  return response.data.results;\n};\n\n// повернення фільмів за пошуком\nexport const fetchSearchQuery = async query => {\n  const target = `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${query}&include_adult=false&language=en-US&page=1`;\n  const response = await axios.get(target);\n  // цей вираз повертає частину даних, а саме результати пошуку.\n  // корисний, коли я шукаю фільм за запитом\n  return response.data.results;\n};\n\n//   повернення деталей про вибраний фільм\nexport const fetchDetailsMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}&language=en-US`;\n  const response = await axios.get(target);\n  // вираз повертає ВСІ дані, які я отримала з API.\n  // корисно, коли треба отримати загальне інфо про фільм\n  // (заголовок, опис, рік випуску, рейтинг ітд)\n  return response.data;\n};\n\n// повернення груп акторів, які грали у вибраному фільмі\nexport const fetchCastMovie = async id => {\n  const target = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}&language=en-US`;\n\n  const response = await axios.get(target);\n  // цей вираз повертає ЛИШЕ частину даних,\n  // в даному випадку тільки групу акторів, які грали у\n  // вибраному фільмі\n  return response.data.cast;\n};\n\n//   повернення рецензії вибраного фільму\nexport const fetchReviewsMovie = async review_id => {\n  const target = `https://api.themoviedb.org/3/review/${review_id}?api_key=${APIKEY}`;\n  const response = await axios.get(target);\n  // вираз повертає ВСІ дані, які я отримала з API.\n  // корисно, коли треба отримати загальне інфо про фільм\n  // (заголовок, опис, рік випуску, рейтинг ітд)\n  return response.data;\n};\nconst Api = {\n  fetchTrendingMovies,\n  fetchSearchQuery,\n  fetchDetailsMovie,\n  fetchCastMovie,\n  fetchReviewsMovie,\n};\n\nexport default Api;\n","import { fetchDetailsMovie } from 'components/Api';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState();\n  let location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  const showFetchedDetailsMovie = async id => {\n    try {\n      const fetchedDetailsMovie = await fetchDetailsMovie(id);\n      setMovie(fetchedDetailsMovie);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    showFetchedDetailsMovie(movieId);\n  }, [movieId]);\n\n  if (movie) {\n    return (\n      <>\n        <div>\n          <div>\n            <Link to={backLink}>\n              <button type=\"button\">← GO BACK</button>\n            </Link>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://www.themoviedb.org/t/p/w220_and_h330_face${movie.poster_path}`\n                  : `https://via.placeholder.com/220x330?text=Theres+no+photo`\n              }\n              alt={`${movie.title}`}\n            />\n          </div>\n          <div>\n            <h2>{movie.title}</h2>\n            <span>User score: {Math.round(movie.vote_average * 10)}%</span>\n            <h3>Overview</h3>\n            <p>{movie.overview ? movie.overview : \"There's no overview\"}</p>\n            <h3>Generes</h3>\n            <p>\n              {movie.genres &&\n                movie.genres.map(e => {\n                  return `${e.name} `;\n                })}\n            </p>\n          </div>\n        </div>\n        <div>\n          Additional information:\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: `${backLink}` }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: `${backLink}` }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n\n        {/* можна використовувати його для визначення, як обробляти запасний вміст під час очікування асинхронних дій та для інкапсуляції будь-якої частини дерева компонентів */}\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet></Outlet>\n        </Suspense>\n      </>\n    );\n  }\n};\n\nexport default MovieDetails;\n"],"names":["APIKEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","target","response","_context","prev","next","concat","axios","sent","abrupt","data","results","stop","apply","arguments","fetchSearchQuery","_ref2","_callee2","query","_context2","_x","fetchDetailsMovie","_ref3","_callee3","id","_context3","_x2","fetchCastMovie","_ref4","_callee4","_context4","cast","_x3","fetchReviewsMovie","_ref5","_callee5","review_id","_context5","_x4","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","backLink","useLocation","state","from","showFetchedDetailsMovie","fetchedDetailsMovie","t0","console","log","movieId","useParams","useEffect","_jsxs","_Fragment","children","_jsx","Link","to","type","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","e","name","Suspense","fallback","Outlet"],"sourceRoot":""}